package com.wipro.training.bank.controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.wipro.training.bank.controller.dao.AdminRequest;
import com.wipro.training.bank.exception.UnauthorizedException;
import com.wipro.training.bank.model.Admin;
import com.wipro.training.bank.service.AdminService;

/*
Author-Abhinav Kumar
Date-Sep 13, 2024
Time-9:32:20 AM
Project-daily-bank
 */

@RestController
@RequestMapping("/api/admin")
public class AdminController {

	private static final Logger logger = LoggerFactory.getLogger(AdminController.class);
	
    private final AdminService adminService;
    
    private static final String ADMIN_USERNAME = "admin";
    private static final String ADMIN_PASSWORD = "admin123";

    public AdminController(AdminService adminService) {
        this.adminService = adminService;
    }

    @PostMapping("/credit")
    public Admin creditMoney(@RequestBody AdminRequest request) {
    	
        logger.info("Admin attempting to credit money for account number: {}", request.getAccountNumber());
        if (authenticate(request.getUsername(), request.getPassword())) {
            return adminService.creditMoney(request);
        } else {
            throw new UnauthorizedException("Invalid admin credentials");
        }
    }

    @PostMapping("/debit")
    public Admin debitMoney(@RequestBody AdminRequest request) {
    	
        logger.info("Admin attempting to debit money for account number: {}", request.getAccountNumber());
        if (authenticate(request.getUsername(), request.getPassword())) {
            return adminService.debitMoney(request);
        } else {
            throw new UnauthorizedException("Invalid admin credentials");
        }
    }

    private boolean authenticate(String username, String password) {
        return ADMIN_USERNAME.equals(username) && ADMIN_PASSWORD.equals(password);
    }
}
